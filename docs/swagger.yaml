definitions:
  errors.Error:
    properties:
      message:
        type: string
      status_code:
        type: integer
    type: object
  models.Account:
    properties:
      access_token:
        type: string
      account_name:
        type: string
      external_account_id:
        type: string
      institutional_id:
        type: string
      user_id:
        type: string
    type: object
  models.AddExpensePayload:
    properties:
      budget_id:
        type: string
      budget_transaction_category_id:
        type: string
      expense_charge_cycle:
        $ref: '#/definitions/models.ExpenseChargeCycle'
      expense_description:
        type: string
      expense_name:
        type: string
      expense_value:
        type: number
    type: object
  models.Budget:
    properties:
      budget_id:
        type: string
      budget_name:
        type: string
      owner_id:
        type: string
    type: object
  models.BudgetTransactionCategory:
    properties:
      budget_id:
        type: string
      budget_transaction_category_id:
        type: string
      category_name:
        type: string
    type: object
  models.BudgetTransactionCategoryCreationPayload:
    properties:
      budget_id:
        type: string
      category_name:
        type: string
    type: object
  models.BudgetTransactionSource:
    properties:
      budget_id:
        type: string
      budget_transaction_source_id:
        type: string
      external_account_id:
        type: string
    type: object
  models.BudgetTransactionSourceCreationPayload:
    properties:
      budget_id:
        type: string
      external_account_id:
        type: string
    type: object
  models.BudgetTransactionSourcePayload:
    properties:
      account_name:
        type: string
      budget_id:
        type: string
      budget_transaction_source_id:
        type: string
      external_account_id:
        type: string
    type: object
  models.CreateBudgetPayload:
    properties:
      budget_name:
        type: string
    type: object
  models.Error:
    properties:
      error:
        type: boolean
      reason:
        type: string
    type: object
  models.Expense:
    properties:
      budget_id:
        type: string
      budget_transaction_category_id:
        type: string
      expense_charge_cycle:
        $ref: '#/definitions/models.ExpenseChargeCycle'
      expense_description:
        type: string
      expense_id:
        type: string
      expense_name:
        type: string
      expense_value:
        type: number
    type: object
  models.ExpenseChargeCycle:
    properties:
      expense_charge_cycle_id:
        type: integer
      unit:
        type: string
    type: object
  models.LinkTokenPayload:
    properties:
      linkToken:
        type: string
    type: object
  models.PlaidAccount:
    properties:
      account_id:
        type: string
      balances:
        $ref: '#/definitions/models.PlaidAccountBalances'
      mask:
        type: string
      name:
        type: string
      official_name:
        type: string
      subtype:
        type: string
      type:
        type: string
      verification_status:
        type: string
    type: object
  models.PlaidAccountBalances:
    properties:
      available:
        type: number
      current:
        type: number
      iso_currency_code:
        type: string
      limit:
        type: number
      unofficial_currency_code:
        type: string
    type: object
  models.PlaidGetBalancesResponse:
    properties:
      accounts:
        items:
          $ref: '#/definitions/models.PlaidAccount'
        type: array
      request_id:
        type: string
    type: object
  models.PlaidLocation:
    properties:
      address:
        type: string
      city:
        type: string
      country:
        type: string
      lat:
        type: number
      lon:
        type: number
      postal_code:
        type: string
      region:
        type: string
      store_number:
        type: string
    type: object
  models.PlaidPaymentMeta:
    properties:
      by_order_of:
        type: string
      payee:
        type: string
      payer:
        type: string
      payment_method:
        type: string
      payment_processor:
        type: string
      ppd_id:
        type: string
      reason:
        type: string
      reference_number:
        type: string
    type: object
  models.PlaidTransaction:
    properties:
      account_id:
        type: string
      account_owner:
        type: string
      amount:
        type: number
      authorized_date:
        type: string
      category:
        items:
          type: string
        type: array
      category_id:
        type: string
      date:
        type: string
      iso_currency_code:
        type: string
      location:
        $ref: '#/definitions/models.PlaidLocation'
      name:
        type: string
      payment_channel:
        type: string
      payment_meta:
        $ref: '#/definitions/models.PlaidPaymentMeta'
      pending:
        type: boolean
      pending_transaction_id:
        type: string
      transaction_code:
        type: string
      transaction_id:
        type: string
      transaction_type:
        type: string
      unofficial_currency_code:
        type: string
    type: object
  models.PublicTokenPayload:
    properties:
      public_token:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      first_name:
        type: string
      google_id:
        type: string
      last_name:
        type: string
      phone:
        type: string
      registration_date:
        type: string
      user_id:
        type: string
    type: object
  models.UserRegistrationPayload:
    properties:
      email:
        type: string
      first_name:
        type: string
      google_id:
        type: string
      last_name:
        type: string
      phone:
        type: string
    type: object
info:
  contact:
    email: lakshay35@gmail.com
    name: Lakshay Sharma
    url: sharmalakshay.com
paths:
  /account/create-link-token:
    get:
      consumes:
      - application/json
      description: Creates a link token to setup UI for generating public tokens
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LinkTokenPayload'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Create Link Token
      tags:
      - External Accounts
  /account/delete/{external-account-id}:
    delete:
      consumes:
      - application/json
      description: Deletes an external account registration
      parameters:
      - description: External Account Id
        in: path
        name: external-account-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Budget'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Delete Account
      tags:
      - External Accounts
  /account/get:
    get:
      consumes:
      - application/json
      description: Gets a list of all external accounts registered via Plaid
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Account'
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Get all registered external accounts
      tags:
      - External Accounts
  /account/get-account-details:
    post:
      consumes:
      - application/json
      description: Gets account information based on access token
      parameters:
      - description: Account payload to get informaion on
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/models.Account'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PlaidAccount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Get Account Information
      tags:
      - External Accounts
  /account/get-account/{external-account-id}:
    get:
      consumes:
      - application/json
      description: Deletes a budget transaction source
      parameters:
      - description: External Account Id
        in: path
        name: external-account-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Get Account by id
      tags:
      - External Accounts
  /account/live-balances:
    get:
      consumes:
      - application/json
      description: Retrieves live account balances for all accounts attached to an
        external account registratiom
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PlaidGetBalancesResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Get Current A/c Balances
      tags:
      - External Accounts
  /account/register-token:
    post:
      consumes:
      - application/json
      description: Creates a permanent access token based on public token
      parameters:
      - description: Token Payload for registering access token
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.PublicTokenPayload'
      produces:
      - application/json
      responses:
        "201":
          description: ""
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Register Access Token
      tags:
      - External Accounts
  /account/transactions:
    post:
      consumes:
      - application/json
      description: Gets all transactions for the  past 30 days
      parameters:
      - description: Account payload to identify transactions with
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Account'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PlaidTransaction'
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Get Transactions
      tags:
      - External Accounts
  /budget/create:
    post:
      consumes:
      - application/json
      description: Creates a budget with requesting user as owner
      parameters:
      - description: Budget body needed to create budget
        in: body
        name: budget
        required: true
        schema:
          $ref: '#/definitions/models.CreateBudgetPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Budget'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Create a budget
      tags:
      - Budgets
  /budget/create-transaction-source:
    post:
      consumes:
      - application/json
      description: Creates a budget transaction source
      parameters:
      - description: Budget Transaction Source
        in: body
        name: budgetTransactionSource
        required: true
        schema:
          $ref: '#/definitions/models.BudgetTransactionSourceCreationPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BudgetTransactionSource'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Creates a budget transaction source
      tags:
      - Budgets
  /budget/delete:
    delete:
      consumes:
      - application/json
      description: Gets a list of all budgets current user is a part of
      parameters:
      - description: Budget ID to delete
        in: header
        name: Budget-ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Budget'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Delete budget
      tags:
      - Budgets
  /budget/delete-transaction-source/{budget-transaction-source-id}:
    delete:
      consumes:
      - application/json
      description: Deletes a budget transaction source
      parameters:
      - description: Budget Transaction Source Id
        in: path
        name: budget-transaction-source-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Delete Budget Transaction Source
      tags:
      - Budgets
  /budget/get:
    get:
      consumes:
      - application/json
      description: Gets a list of all budgets current user is a part of
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Budget'
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Get Budgets
      tags:
      - Budgets
  /budget/get-expense-summary:
    get:
      consumes:
      - application/json
      description: Gets data about user spending vs budget
      parameters:
      - description: Budget ID to get expense summary for
        in: header
        name: Budget-ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - Google AccessToken: []
      summary: Get Budget Expense summary
      tags:
      - Budgets
  /budget/get-transaction-sources:
    get:
      consumes:
      - application/json
      description: Gets a list of all budget transaction sources current user is a
        part of
      parameters:
      - description: Budget ID to pull transaction sources for
        in: header
        name: Budget-ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.BudgetTransactionSourcePayload'
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Get Budget Transaction Sources
      tags:
      - Budgets
  /budget/transaction-categories:
    get:
      consumes:
      - application/json
      description: Gets all transaction categories from plaid
      parameters:
      - description: Budget ID to get categories for
        in: header
        name: Budget-ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.BudgetTransactionCategory'
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Get Transaction Categories
      tags:
      - Budgets
  /budget/transaction-categories/create:
    post:
      consumes:
      - application/json
      description: Creates a budget transaction source
      parameters:
      - description: Budget Transaction Category
        in: body
        name: budgetTransactionSource
        required: true
        schema:
          $ref: '#/definitions/models.BudgetTransactionCategoryCreationPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BudgetTransactionCategory'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Creates a budget transaction source
      tags:
      - Budgets
  /budget/transaction-categories/delete/{budget-transaction-category-id}:
    delete:
      consumes:
      - application/json
      description: Deletes a budget transaction category
      parameters:
      - description: Budget Transaction Category Id
        in: path
        name: budget-transaction-category-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Delete budget transaction category
      tags:
      - Budgets
  /expense/add:
    post:
      consumes:
      - application/json
      description: Add expense to an existing budget
      parameters:
      - description: Expense payload representing entity to be created
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.AddExpensePayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Expense'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Adds an expense to the given budget
      tags:
      - Budget Expenses
  /expense/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes Expense from DB based on id
      parameters:
      - description: Expense ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Deletes Expense
      tags:
      - Budget Expenses
  /expense/get:
    get:
      consumes:
      - application/json
      description: Gets a list of all expenses tied to a given budget
      parameters:
      - description: Budget ID to get expenses against
        in: header
        name: Budget-ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Expense'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Gets expenses for budget
      tags:
      - Budget Expenses
  /expense/get-expense-charge-cycles:
    get:
      consumes:
      - application/json
      description: Gets all the expense charge cycles available to create an expense
        for a budget
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ExpenseChargeCycle'
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Gets a list of expense charge cycles
      tags:
      - Budget Expenses
  /expense/update:
    put:
      consumes:
      - application/json
      description: Add expense to an existing budget
      parameters:
      - description: Expense payload representing entity to be updated
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Expense'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Expense'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Adds an expense to the database
      tags:
      - Budget Expenses
  /role/add-user-role-to-budget:
    post:
      consumes:
      - application/json
      description: Registers a user profile in the finlit database
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Registers user to the database
      tags:
      - User Roles
  /user/get:
    get:
      consumes:
      - application/json
      description: Gets the user's profile from the finlit database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Gets user from the database
      tags:
      - Users
  /user/register:
    post:
      consumes:
      - application/json
      description: Registers a user profile in the finlit database
      parameters:
      - description: User Information Paylod
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UserRegistrationPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - Google AccessToken: []
      summary: Registers user to the database
      tags:
      - Users
securityDefinitions:
  Google AccessToken:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
