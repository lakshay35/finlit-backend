{
    "swagger": "2.0",
    "info": {
        "contact": {
            "name": "Lakshay Sharma",
            "url": "sharmalakshay.com",
            "email": "lakshay35@gmail.com"
        }
    },
    "paths": {
        "/account/get": {
            "get": {
                "description": "Gets a list of all external accounts registered via Plaid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get all registered external accounts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/routes.Account"
                            }
                        }
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    }
                }
            }
        },
        "/account/get-account-details": {
            "get": {
                "description": "Gets account information based on access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Get Account Information",
                "parameters": [
                    {
                        "description": "Account payload to get informaion on",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.Account"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Expense"
                        }
                    }
                }
            }
        },
        "/account/live-balances": {
            "get": {
                "description": "Retrieves live account balances for all accounts attached to an external account registratiom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Current A/c Balances"
            }
        },
        "/account/register-token": {
            "post": {
                "description": "Creates a permanent access token based on public token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Register Access Token",
                "parameters": [
                    {
                        "description": "Token Payload for registering access token",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.tokenPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Expense"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/account/transactions": {
            "get": {
                "description": "Gets all transactions for the  past 30 days",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Transactions",
                "parameters": [
                    {
                        "description": "Account payload to identify transactions with",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.Account"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/budget/create": {
            "post": {
                "description": "Creates a budget with requesting user as owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a budget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Expense ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Budget body needed to create budget",
                        "name": "budget",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.budget"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Expense"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/budget/get": {
            "post": {
                "description": "Gets a list of all budgets current user is a part of",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Budgets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Expense ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/routes.budgetResponse"
                            }
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/expense/add": {
            "post": {
                "description": "Add expense to an existing budget",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Adds an expense to the database",
                "parameters": [
                    {
                        "description": "Expense payload representing entity to be created",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Expense"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Expense"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "401": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/expense/delete/{id}": {
            "delete": {
                "description": "Deletes Expense from DB based on id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Deletes Expense",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Expense ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of Expense",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "401": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/expense/get": {
            "get": {
                "description": "Gets a list of all expenses tied to a given budget",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Gets expenses for budget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID to get expenses against",
                        "name": "budgetID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Expense"
                            }
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "401": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/expense/get-expense-charge-cycles": {
            "get": {
                "description": "Gets all the expense charge cycles available to create an expense for a budget",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of expense charge cycles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ExpenseChargeCycle"
                            }
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/expense/update": {
            "put": {
                "description": "Add expense to an existing budget",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Adds an expense to the database",
                "parameters": [
                    {
                        "description": "Expense payload representing entity to be updated",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Expense"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/models.Expense"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "401": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    }
                }
            }
        },
        "/user/get": {
            "get": {
                "description": "Gets the user's profile from the finlit database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Gets user from the database",
                "operationId": "user-get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Registers a user profile in the finlit database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Registers user to the database",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/routes.Account"
                            }
                        }
                    },
                    "403": {
                        "description": ""
                    },
                    "409": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Expense": {
            "type": "object",
            "properties": {
                "budget_id": {
                    "type": "string"
                },
                "expense_charge_cycle": {
                    "type": "string"
                },
                "expense_description": {
                    "type": "string"
                },
                "expense_id": {
                    "type": "string"
                },
                "expense_name": {
                    "type": "string"
                },
                "expense_value": {
                    "type": "number"
                }
            }
        },
        "models.ExpenseChargeCycle": {
            "type": "object",
            "properties": {
                "expense_charge_cycle_id": {
                    "type": "integer"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "googleID": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "registrationDate": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "routes.Account": {
            "type": "object",
            "properties": {
                "accountName": {
                    "type": "string"
                },
                "externalAccountID": {
                    "type": "string"
                }
            }
        },
        "routes.LinkTokenPayload": {
            "type": "object",
            "properties": {
                "linkToken": {
                    "type": "string"
                }
            }
        },
        "routes.budget": {
            "type": "object",
            "properties": {
                "budgetName": {
                    "type": "string"
                }
            }
        },
        "routes.budgetResponse": {
            "type": "object",
            "properties": {
                "budgetID": {
                    "type": "string"
                },
                "budgetName": {
                    "type": "string"
                },
                "ownerID": {
                    "type": "string"
                }
            }
        },
        "routes.tokenPayload": {
            "type": "object",
            "properties": {
                "public_token": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    },
    "x-extension-openapi": {
        "example": "value on a json format"
    }
}